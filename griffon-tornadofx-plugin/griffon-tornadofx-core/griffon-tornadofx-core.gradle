/*
 * Copyright 2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.kotlin.kapt'
apply from: rootProject.file('gradle/code-coverage.gradle')

dependencies {
    kapt            "org.codehaus.griffon:griffon-core-compile:${griffonVersion}"
    compileOnly     "org.codehaus.griffon:griffon-core-compile:${griffonVersion}"
    testCompileOnly "org.codehaus.griffon:griffon-core-compile:${griffonVersion}"

    compile "org.codehaus.griffon:griffon-javafx:${griffonVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    compile "no.tornado:tornadofx:${tornadofxVersion}"

    testCompile "org.codehaus.griffon:griffon-javafx-test:${griffonVersion}"

    testRuntime "org.codehaus.griffon:griffon-guice:${griffonVersion}"
    testRuntime "org.slf4j:slf4j-simple:$slf4jVersion"
}

sourceSets {
    main {
        kotlin {
            srcDirs += [
                'griffon-app/conf',
                'griffon-app/controllers',
                'griffon-app/models',
                'griffon-app/views',
                'griffon-app/services',
                'griffon-app/lifecycle',
                'src/main/java',
                'src/main/kotlin'
            ]
        }
        resources {
            srcDirs += [
                'griffon-app/resources',
                'griffon-app/i18n',
                'src/main/resources'
            ]
        }
    }
}

processResources {
    filesMatching(resourceFilePatterns) {
        expand(
            'application_name'   : project.name,
            'application_version': project.version,
            'griffon_version'    : project.version,
            'build_date'         : buildDate,
            'build_time'         : buildTime,
            'build_revision'     : versioning.info.commit
        )
    }
}

processTestResources {
    filesMatching(resourceFilePatterns) {
        expand(
            'application_name'   : project.name,
            'application_version': project.version,
            'griffon_version'    : project.version,
            'build_date'         : buildDate,
            'build_time'         : buildTime,
            'build_revision'     : versioning.info.commit
        )
    }
}

stats {
    paths += [
        model     : [name: 'Models',        path: 'griffon-app/models'],
        view      : [name: 'Views',         path: 'griffon-app/views'],
        controller: [name: 'Controllers',   path: 'griffon-app/controllers'],
        service   : [name: 'Services',      path: 'griffon-app/services'],
        config    : [name: 'Configuration', path: 'griffon-app/conf'],
        lifecycle : [name: 'Lifecycle',     path: 'griffon-app/lifecycle']
    ]
}

compileKotlin {
    kotlinOptions.jvmTarget= '1.8'
}
